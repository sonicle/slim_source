#!/bin/sh
#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
# Copyright (c) 2009, 2010, Oracle and/or its affiliates. All rights reserved.

. /lib/svc/share/smf_include.sh

# Make sure working directory is / to prevent unmounting problems.
cd /
GREP=/bin/grep
INSTALLADM=/usr/sbin/installadm
APACHE2=/usr/apache2/2.4/bin/apachectl
AI_HTTPD_CONF=/var/installadm/ai-webserver/ai-httpd.conf
ECHO=/usr/bin/echo
HTTPD=/usr/apache2/2.4/bin/httpd
AWK=/usr/bin/awk
SVCCFG=/usr/sbin/svccfg
INSTANCE=svc:/system/install/server:default

case "$1" in
'start')
        # Code to execute on start

	# The goal is to installadm enable <svcname> each
	# service that is listed as enabled. 

	service_cnt=0
	SMF_PGS=$(${SVCCFG} -s ${INSTANCE} listpg | ${AWK} '{print $1}' | ${GREP} "AI")
	for pg in ${SMF_PGS} ; do
		status=$(${SVCCFG} -s ${INSTANCE} listprop ${pg}/status | ${AWK}  '{print $3}')
		if [ "X${status}" != "X" ] ; then
			if [ "${status}" == "on" ] ; then
				service_name=$(${SVCCFG} -s ${INSTANCE} listprop ${pg}/service_name | ${AWK}  '{print $3}')
				${INSTALLADM} enable ${service_name}
				if [ $? -ne 0 ] ; then
					${ECHO} "Unable to enable ${service_name}"
					exit $SMF_EXIT_ERR_CONFIG	
				fi
				service_cnt=1
			fi
		fi
	done
	if [ $service_cnt -eq 0 ] ; then
		${ECHO} "No install services are enabled. Incorrect configuration\n"
		exit $SMF_EXIT_ERR_CONFIG
	fi
	# Start up the apache web server using our http config file
	if [ -f ${AI_HTTPD_CONF} ] ; then
		${APACHE2} -f ${AI_HTTPD_CONF} -k start
		if [ $? -ne 0 ] ; then
			${ECHO} "Unable to start apache process"
			exit $SMF_EXIT_ERR_CONFIG
		fi	
	else
		${ECHO} "Unable to start apache process due to missing config file ${AI_HTTPD_CONF}"
		exit $SMF_EXIT_ERR_CONFIG
	fi
	;;

'stop')
        # Code to execute on stop
	# If the install service is listed as enabled, disable it with the -t.
	SMF_PGS=$(${SVCCFG} -s ${INSTANCE} listpg | ${AWK} '{print $1}' | ${GREP} "AI")
	for pg in ${SMF_PGS} ; do
		status=$(${SVCCFG} -s ${INSTANCE} listprop ${pg}/status | ${AWK}  '{print $3}')
		if [ "X${status}" != "X" ] ; then
			if [ "${status}" == "on" ] ; then
				service_name=$(${SVCCFG} -s ${INSTANCE} listprop ${pg}/service_name | ${AWK}  '{print $3}')
				${INSTALLADM} disable -t ${service_name}
				if [ $? -ne 0 ] ; then
					${ECHO} "Unable to disable ${service_name}"
					exit $SMF_EXIT_ERR_CONFIG	
				fi
			fi
		fi
	done
	if [ -f ${AI_HTTPD_CONF} ] ; then
		${HTTPD} -f ${AI_HTTPD_CONF} -k stop
		if [ $? -ne 0 ] ; then
			${ECHO} "Unable to stop apache process"
			exit $SMF_EXIT_ERR_CONFIG
		fi
	else
		${ECHO} "Unable to stop apache process due to missing config file ${AI_HTTPD_CONF}"
               	exit $SMF_EXIT_ERR_CONFIG
        fi
	;;
*)
	${ECHO} "Usage: $0 { start | stop }"
	exit 1 
	;;


esac
exit 0
